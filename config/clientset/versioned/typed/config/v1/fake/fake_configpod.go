// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/config/v1"
	configv1 "github.com/openshift/client-go/config/applyconfigurations/config/v1"
	typedconfigv1 "github.com/openshift/client-go/config/clientset/versioned/typed/config/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeConfigPods implements ConfigPodInterface
type fakeConfigPods struct {
	*gentype.FakeClientWithListAndApply[*v1.ConfigPod, *v1.ConfigPodList, *configv1.ConfigPodApplyConfiguration]
	Fake *FakeConfigV1
}

func newFakeConfigPods(fake *FakeConfigV1, namespace string) typedconfigv1.ConfigPodInterface {
	return &fakeConfigPods{
		gentype.NewFakeClientWithListAndApply[*v1.ConfigPod, *v1.ConfigPodList, *configv1.ConfigPodApplyConfiguration](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("configpods"),
			v1.SchemeGroupVersion.WithKind("ConfigPod"),
			func() *v1.ConfigPod { return &v1.ConfigPod{} },
			func() *v1.ConfigPodList { return &v1.ConfigPodList{} },
			func(dst, src *v1.ConfigPodList) { dst.ListMeta = src.ListMeta },
			func(list *v1.ConfigPodList) []*v1.ConfigPod { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.ConfigPodList, items []*v1.ConfigPod) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
