// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	configv1 "github.com/openshift/api/config/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ConfigPodLister helps list ConfigPods.
// All objects returned here must be treated as read-only.
type ConfigPodLister interface {
	// List lists all ConfigPods in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*configv1.ConfigPod, err error)
	// ConfigPods returns an object that can list and get ConfigPods.
	ConfigPods(namespace string) ConfigPodNamespaceLister
	ConfigPodListerExpansion
}

// configPodLister implements the ConfigPodLister interface.
type configPodLister struct {
	listers.ResourceIndexer[*configv1.ConfigPod]
}

// NewConfigPodLister returns a new ConfigPodLister.
func NewConfigPodLister(indexer cache.Indexer) ConfigPodLister {
	return &configPodLister{listers.New[*configv1.ConfigPod](indexer, configv1.Resource("configpod"))}
}

// ConfigPods returns an object that can list and get ConfigPods.
func (s *configPodLister) ConfigPods(namespace string) ConfigPodNamespaceLister {
	return configPodNamespaceLister{listers.NewNamespaced[*configv1.ConfigPod](s.ResourceIndexer, namespace)}
}

// ConfigPodNamespaceLister helps list and get ConfigPods.
// All objects returned here must be treated as read-only.
type ConfigPodNamespaceLister interface {
	// List lists all ConfigPods in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*configv1.ConfigPod, err error)
	// Get retrieves the ConfigPod from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*configv1.ConfigPod, error)
	ConfigPodNamespaceListerExpansion
}

// configPodNamespaceLister implements the ConfigPodNamespaceLister
// interface.
type configPodNamespaceLister struct {
	listers.ResourceIndexer[*configv1.ConfigPod]
}
